# What happens when you initialize a repository? why do you need to do it?

	a .git folder is created
	.git folder keeps track of all the commits in the repository

# How is that staging area different from the working directory and the repository? What value do you think it offers? 

	the staging area allows the user to gradually add new documents before the commmit
	allows to target out certain changes in the before committing anything

# How can you use the staging area to make sure you have one commit per logical change? 

	Only add one change per commit
	By using the staging area, you can pool together certain changes that fix only one issue. 

# What are some situations when branches would be helpful in keeping you rhistory organized? How would branches help?

	When adding new feats, you can easily create new branches for development before allowing them to the master, to ensure it does not get polluted!

# How do the diagrams help you visualize the branch structure?

	Diagrams visualize where branches are split off, and how some nodes are not reachable anymore


# What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Two branches are merged into one commit and this commit has acces two both branches
	the diagram allows for an easy overview of all the different commits

# What are the pros and cons of Git's automatic merging vs always doing merges manualy?

	- automatic merging allows for faster putting different files together
		=> you don't have to go through them manually to check which is which

	- always doing merges manually
		=> you can decide for yourself which code should be included in the files
		=> allows for great flexibility!

		